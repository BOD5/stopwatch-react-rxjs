{"version":3,"sources":["components/DisplayTime.jsx","components/StopwatchFun.jsx","components/StopwatchObs.jsx","App.jsx","index.js"],"names":["validate","time","DisplayTime","className","Math","floor","action$","Subject","ACTIONS","StopwatchFun","useState","sec","setSec","dbClick","setDbClick","useEffect","value","setValue","observ","pipe","startWith","count","scan","state","action","newVal","Object","keys","length","tap","switchMap","interval","_","NEVER","subscribe","unsubscribe","onClick","next","setTimeout","counter","Observable","observer","intervalID","setInterval","clearInterval","StopwatchObs","subscr","setSub","x","v","App","ROUTES","location","useLocation","isFirst","pathname","path","element","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26db24a4.chunk.js","sourcesContent":["import React from 'react';\n\nconst validate = (time) => (time >= 10) ? time : '0' + time;\n\nconst DisplayTime = ({time}) => {\n  return (\n    <div>\n      <p className='displayed'>\n        {validate(Math.floor(time / 3600))} : {validate(Math.floor(time / 60))} : {validate(time % 60)}\n      </p>\n    </div>\n  );\n}\n\nexport default DisplayTime;\n","import {\n  interval,\n  NEVER,\n  scan,\n  startWith,\n  Subject,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport { useEffect, useState } from 'react';\nimport DisplayTime from './DisplayTime';\n\nconst action$ = new Subject();\n\nconst ACTIONS = {\n  START: 'start',\n  WAIT: 'wait',\n  RESET: 'reset',\n}\n\nconst stopWatchSub = (value, setValue) => {\n  const stopWatch$ = action$.pipe(\n    startWith({ count: false, value: value }),\n    scan((state, action) => {\n      let newVal = {};\n      if (Object.keys(state).length === 0) newVal = { count: false, value: value };   // because startWith returns {} on the first iteration\n      if (action === ACTIONS.START) {\n        newVal = (state.count) ? { count: false, value: 0 } : { count: true };\n      }\n      if (action === ACTIONS.WAIT) {\n        newVal = { count: false };\n      }\n      if (action === ACTIONS.RESET) {\n        newVal = { count: true, value: 0 };\n      }\n      return ({ ...state, ...newVal });\n    }, {}),\n    tap((state) => setValue(state.value)),\n    switchMap((state) => \n    state.count\n      ? interval(1000)\n        .pipe(\n          tap(_ => state.value += 1),\n          tap(_ => setValue(state.value)),\n        )\n      : NEVER)\n  );\n\n  return stopWatch$.subscribe();\n}\n\nconst StopwatchFun = () => {\n  const [sec, setSec] = useState(0);\n  const [dbClick, setDbClick] = useState(false);\n  \n  useEffect(() => {\n    const observ = stopWatchSub(sec, setSec);\n    return () => observ.unsubscribe();\n  }, [])\n\n  const handleStart = () => {\n    action$.next(ACTIONS.START);\n  }\n\n  \n  const handleWait = () => {\n    if (dbClick) {\n      action$.next(ACTIONS.WAIT);\n      setDbClick(false);\n    }\n    setDbClick(true);\n    setTimeout(() => {\n      setDbClick(false);\n    }, 300);\n  }\n\n  const handleReset = () => {\n    action$.next(ACTIONS.RESET);\n  }\n\n  return (\n    <div>\n      <h1>stopwatch Fun</h1>\n      <DisplayTime time={sec} />\n      <button onClick={handleStart}>Start/stop</button>\n      <button onClick={handleWait}>wait</button>\n      <button onClick={handleReset}>reset</button>\n    </div>\n  );\n}\n\nexport default StopwatchFun;\n","import { Observable } from 'rxjs';\nimport { useEffect, useState } from 'react';\nimport DisplayTime from './DisplayTime';\n\nconst counter = new Observable(function subscribe(observer) {\n  var intervalID = setInterval(() => {\n    observer.next(1);\n  }, 1000);\n  return function unsubscribe() {\n    clearInterval(intervalID);\n  };\n});\n\nconst StopwatchObs = () => {\n  const [sec, setSec] = useState(0);\n  const [subscr, setSub] = useState(null);\n  const [dbClick, setDbClick] = useState(false);\n\n  useEffect(() => (subscr) & (() => subscr.unsubscribe()), []);\n\n  const startHandler = () => {\n    if (subscr) {\n      subscr.unsubscribe();\n      setSub(null);\n      setSec(0);\n    } else setSub(counter.subscribe(x => setSec(v => v + x)));\n  }\n  const waitHandler = () => {\n    if (subscr && dbClick) {\n      subscr.unsubscribe();\n      setSub(null);\n      setDbClick(false);\n    }\n    setDbClick(true);\n    setTimeout(() => {\n      setDbClick(false);\n    }, 300);\n  }\n  const resetHandler = () => {\n    setSec(0);\n    if(!subscr) setSub(counter.subscribe(x => setSec(v => v + x)));\n  }\n  return (\n    <div>\n      <h1>stopwatch</h1>\n      <DisplayTime time={sec} />\n      <button onClick={startHandler}> {(!subscr) ? 'Start':'Stop'}</button>\n      <button onClick={waitHandler}>wait</button>\n      <button onClick={resetHandler}>reset</button>\n    </div>\n  );\n}\n\nexport default StopwatchObs;\n","import { Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport './App.css';\nimport StopwatchFun from './components/StopwatchFun';\nimport StopwatchObs from './components/StopwatchObs';\n\nconst App = () => {\n  const ROUTES = {\n    FIRST: '/first',\n    SECOND: '/second',\n  }\n  const location = useLocation()\n  const isFirst = () => location.pathname === '/first';\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path={ ROUTES.FIRST } element={<StopwatchObs />} />\n        <Route path={ ROUTES.SECOND } element={ <StopwatchFun /> } />\n        <Route path=\"*\" element={ <Navigate to='/first'/> } />\n      </Routes>\n      <Link to={!isFirst() ? '/first' : '/second'} >\n        <button>\n          { isFirst()? 'to second implementation' : 'to first implementation' }\n        </button>\n      </Link>\n      <p>double click to wait</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}